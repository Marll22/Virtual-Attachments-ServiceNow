<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <ignore_in_now_experience>false</ignore_in_now_experience>
        <name>x_376096_va.virtual_attachments</name>
        <script><![CDATA[/*
MIT License

Copyright (c) 2022 Markus Kraus

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
var x_376096_va = x_376096_va || {};

x_376096_va.virtual_attachments = (function() {
	"use strict";
	
	/* global GlideModal, g_form, XMLHttpRequest */
	/* eslint no-undef: "error" */
	if (x_376096_va.virtual_attachments) {
		return x_376096_va.virtual_attachments;
	}
	
	var $window;
	var $config;
	
	x_376096_va.loader.get('window', function (_window) {
		$window = _window;
		init($window, $config);
	});
	
	x_376096_va.loader.get('config', function (_config) {
		$config = _config;
		init($window, $config);
	});

	return {
		type: "virtual_attachments"
	};
	
	function init($window, $config) {
		if ($window && $config) {
			if ($config.enabled) {
				_init($window, $config);
			}
		}
	}
	
	function _init($window, $config) {
		modifyAttachmentLinks($window, $config);

		var ootbAttachmentAdd = $window.document.getElementById("header_add_attachment");
		if (ootbAttachmentAdd && ootbAttachmentAdd.parentNode) {
			var addButton = $window.document.createElement('button');
			addButton.classList.add("btn", "btn-icon", "icon-document-all-generic", "navbar-btn");
			addButton.title = $config.translations['Add Virtual Attachment'];
			addButton.onclick = function () {
				var dialog = new GlideModal('x_376096_va_virtual_attachment_upload');
				dialog.setTitle($config.translations['Add Virtual Attachment']);
				dialog.setPreference('sysparm_record_table_name', $window.g_form.getTableName());
				dialog.setPreference('sysparm_record_sys_id', $window.g_form.getUniqueValue());
				dialog.on('beforeclose', function () {
					modifyAttachmentLinks($window, $config);
				});
				dialog.setWidth(350); // modal-sm
				dialog.setBackdropStatic(true);
				dialog.render();
			};
			
			ootbAttachmentAdd.parentNode.insertBefore(addButton, ootbAttachmentAdd);
		}
	}
		
	function modifyAttachmentLinks($window, $config) {
		var attachments = $config.attachments;
		var viewWindowFeatures = "toolbar=no,menubar=no,personalbar=no,width=800,height=600,scrollbars=yes,resizable=yes";
		for (var sys_id in attachments) {
			var url = attachments[sys_id].url;
			Array.prototype.slice.call(
				$window.document.querySelectorAll('a[href*="sys_attachment.do?sys_id=' + sys_id + '"]')
			).forEach(function (node) {
				node.href = url;
				node.target = '_blank';
				node.removeAttribute('onclick');
			});

			Array.prototype.slice.call(
				$window.document.querySelectorAll('a.attachment.view_' + sys_id)
			).forEach(function (node) {
				if (node.onclick) {
					if (node.onclick.toString().indexOf('tearOffAttachment') > -1) {
						node.onclick = function () {
							$window.open(url, sys_id + "_" + $window.tearOffWindowID++, viewWindowFeatures);
						};
					} else {
						node.onclick = function () {
							$window.open(url, '_blank').focus();
						};
					}
				}
			});
		}
	}
})();]]></script>
        <script_name>virtual_attachments</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-01 07:54:55</sys_created_on>
        <sys_id>b2a1ade5978911102f77b4b3f153af70</sys_id>
        <sys_name>x_376096_va.virtual_attachments</sys_name>
        <sys_package display_value="Virtual Attachments" source="x_376096_va">ccd819ed974911102f77b4b3f153af19</sys_package>
        <sys_policy/>
        <sys_scope display_value="Virtual Attachments">ccd819ed974911102f77b4b3f153af19</sys_scope>
        <sys_update_name>sys_ui_script_b2a1ade5978911102f77b4b3f153af70</sys_update_name>
        <ui_type>0</ui_type>
        <use_scoped_format>true</use_scoped_format>
    </sys_ui_script>
</record_update>
